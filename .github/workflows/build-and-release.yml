name: Build and Release Tauri App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Run prebuild script
        run: npm run prebuild

      - name: Build Tauri app
        run: npm run tauri build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run postbuild script
        run: npm run postbuild

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: tauri-app-${{ matrix.platform }}
          path: src-tauri/target/release/bundle/

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./release

      - name: Create release branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b release-${{ github.run_number }}
          git add ./release
          git commit -m "Add release artifacts for build ${{ github.run_number }}"
          git push origin release-${{ github.run_number }}

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ github.run_number }} \
            --title "Release ${{ github.run_number }}" \
            --draft \
            --generate-notes \
            ./release/**/*

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in ./release/**/*; do
            gh release upload v${{ github.run_number }} "$file"
          done